[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "torch-data-bigquery"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
keywords = ['torch', 'pytorch', 'bigquery', 'google-cloud']

authors = [
  { name = "Sebastian PawluÅ›" },
]

classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]

dependencies = [
    "google-cloud-bigquery",
    "google-cloud-bigquery-storage",
    "torch",
    "pyarrow",
]

[project.urls]
Documentation = "https://github.com/xando/torch-data-bigquery#readme"
Issues = "https://github.com/xando/torch-data-bigquery/issues"
Source = "https://github.com/xando/torch-data-bigquery"


[tool.hatch.version]
path = "src/torch_data_bigquery/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.8", "3.9", "3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/torch_data_bigquery tests}"

[tool.coverage.run]
source_pkgs = ["torch_data_bigquery", "tests"]
branch = true
parallel = true
omit = [
  "src/torch_data_bigquery/__about__.py",
]

[tool.coverage.paths]
torch_data_bigquery = ["src/torch_data_bigquery", "*/torch-data-bigquery/src/torch_data_bigquery"]
tests = ["tests", "*/torch-data-bigquery/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.ruff]
line-length = 120
indent-width = 4

[tool.flake8]
line-length = 120
indent-width = 4
